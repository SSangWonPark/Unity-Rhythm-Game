// 노트에 대한 위치 
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TimingManager : MonoBehaviour
{
    public List<GameObject> boxNoteList = new List<GameObject>();

    [SerializeField] Transform center = null;   // 판정 범위의 중심
    [SerializeField] RectTransform[] timingRect = null; // 다양한 판정 범위
    Vector2[] timingBoxs = null;    // 판정 범위 최소값 x, 최대값 y

    void Start()
    {
        // 타이밍 박스 설정
        timingBoxs = new Vector2[timingRect.Length];
        // i 값에 따라 perfect, cool, good, bad
        for (int i = 0; i < timingRect.Length; i++)
        {
            timingBoxs[i].Set(center.localPosition.x - timingRect[i].rect.width / 2,
                              center.localPosition.x + timingRect[i].rect.width / 2);
            // 판정 범위
            // 최소값 = 중심 - (이미지의 너비/2)
            // 최대값 = 중심 + (이미지의 너비/2)
        }
    }

    public void CheckTiming()
    {
        // 리스트를 확인해 판정 박스에 있는 노트 확인
        for (int i = 0; i < boxNoteList.Count; i++)
        {
            // 판정범위 최소값 <= 노트의 x값 <= 판정범위 최대값
            float t_notePosX = boxNoteList[i].transform.localPosition.x;

            // 판정 범위를 반복해 어느 범위에 있는지 확인
            // 판정 순서 : Perfect -> Cool -> Good -> Bad
            for (int x = 0; x < timingBoxs.Length; x++)
            {
                if (timingBoxs[x].x <= t_notePosX && t_notePosX <= timingBoxs[x].y)
                {
                    boxNoteList[i].GetComponent<Note>().HideNote(); // 이미지를 지우는 함수 호출
                    boxNoteList.RemoveAt(i);

                    switch (x)
                    {
                        case 0:
                            Debug.Log("Perfect");
                            break;
                        case 1:
                            Debug.Log("Cool");
                            break;
                        case 2:
                            Debug.Log("Good");
                            break;
                        case 3:
                            Debug.Log("Bad");
                            break;
                    }
                    return;
                }
            }

            Debug.Log("Miss");
        }
    }
}
